<Page
    x:Class="raumPlayer.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prismMvvm="using:Prism.Windows.Mvvm"
    prismMvvm:ViewModelLocator.AutoWireViewModel="True"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:vm="using:raumPlayer.ViewModels"
    xmlns:uc="using:raumPlayer.UserControls"
    xmlns:interface="using:raumPlayer.Interfaces"
    xmlns:helpers="using:raumPlayer.Helpers"
    
    mc:Ignorable="d">
    <Grid x:Name="ShellContent" Background="{ThemeResource RegionBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <NavigationView x:Name="navigationView"
                        AlwaysShowHeader="True"
                        IsBackButtonVisible="Visible"
                        IsBackEnabled="{x:Bind ViewModel.IsBackEnabled, Mode=OneWay}"
                        SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
                        IsSettingsVisible="True"
                        ItemInvoked="OnItemInvoked"
                        CompactModeThresholdWidth="0"
                        Style="{StaticResource appNavigationViewStyle}"
                        PaneTitle="raumPlayer">
            <NavigationView.Header>
                <Grid Height="20" Margin="8,8,0,8">
                    <TextBlock Text="{x:Bind ViewModel.Selected.Content, Mode=OneWay}" Margin="0,0,0,0" Style="{StaticResource AppHeaderTextStyle}" VerticalAlignment="Center"/>
                </Grid>
            </NavigationView.Header>
            <NavigationView.MenuItems>
                <NavigationViewItemHeader x:Uid="navItems_Groups" Content="NAV_GROUPS"/>
                <NavigationViewItem x:Uid="NavItem_MyMusic" Content="MY_MUSIC" helpers:NavHelper.NavigateTo="MyMusic" >
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE189;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem x:Uid="NavItem_Playlists" Content="PLAYLISTS" helpers:NavHelper.NavigateTo="Playlists" >
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE90B;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem x:Uid="NavItem_Favorites" Content="FAVORITES" helpers:NavHelper.NavigateTo="MyMusic" >
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEB51;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem x:Uid="NavItem_TuneIn" Content="TUNE_IN" helpers:NavHelper.NavigateTo="MyMusic" 
                                    IsEnabled="{x:Bind ViewModel.IsTuneInAvailable, Mode=OneWay}">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC05;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>

                <NavigationViewItemSeparator/>
                <NavigationViewItemHeader x:Name="navItems_ManageZones" Content="MANAGE_ZONES"/>

                <NavigationViewItem x:Uid="NavItem_ActiveZone" Content="ACTIVE_ZONE" helpers:NavHelper.NavigateTo="MyMusic">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE965;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
                <NavigationViewItem x:Uid="NavItem_ZoneConfig" Content="SET_ZONE" helpers:NavHelper.NavigateTo="MyMusic">
                    <NavigationViewItem.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE15E;"/>
                    </NavigationViewItem.Icon>
                </NavigationViewItem>
            </NavigationView.MenuItems>
            <Grid>
                <Border x:Name="ShadowCatcher"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
                <Grid Margin="8,0,8,8"
                      Background="{ThemeResource RegionBrush}">
                    <uc:Shadow  HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Elevation="10"
                                Margin="2"
                                Color="{ThemeResource SystemRevealListMediumColor}"/>
                    <Frame x:Name="shellFrame"
                           IsTabStop="True">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition/>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>
                </Grid>
            </Grid>

        </NavigationView>
        <RelativePanel x:Name="relativePanelCurrentItem"  Height="80" Grid.ColumnSpan="2" Grid.Row="1" Background="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.AverageColorImageArt, Mode=OneWay}">
            <Image x:Name="imageCurrentItem" Width="80" Height="80" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" RelativePanel.RightOf=""
                           Source="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.ImageArt, Mode=OneWay}"/>
            <StackPanel x:Name="descriptionCurrentItem" RelativePanel.AlignVerticalCenterWith="imageCurrentItem" RelativePanel.RightOf="currentTrackCurrentItem" Margin="8,0,0,0" RelativePanel.AlignTopWith="">
                <TextBlock x:Name="textBlockTitle" Text="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.Title, Mode=OneWay}" />
                <TextBlock x:Name="textBlockAlbum" Text="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.Line1, Mode=OneWay}" />
                <TextBlock x:Name="textBlockArtist" Text="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.Line2, Mode=OneWay}" />
            </StackPanel>
            <Border x:Name="currentTrackCurrentItem" RelativePanel.AlignVerticalCenterWith="imageCurrentItem" RelativePanel.RightOf="imageCurrentItem" Margin="8,0,0,0" RelativePanel.AlignTopWith="" VerticalAlignment="Center">
                <TextBlock x:Name="NumberBlock" Text="{x:Bind ViewModel.ActiveZoneViewModel.CurrentTrackMetaData.OriginalTrackNumber, Mode=OneWay}" FontFamily="ms-appx:///Assets/Fonts/LCD2N___.TTF#LCD2" FontSize="40" HorizontalAlignment="Right" VerticalAlignment="Center" />
            </Border>
            <Grid x:Name="controlsCurrentItem"
                  BorderBrush="{ThemeResource AppBarButtonRevealBorderBrush}"
                  RelativePanel.AlignVerticalCenterWith="imageCurrentItem"
                  RelativePanel.AlignRightWithPanel="True"
                  RelativePanel.AlignBottomWith="">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="col1" Width="40"/>
                    <ColumnDefinition x:Name="col2" Width="40"/>
                    <ColumnDefinition x:Name="col3" Width="40"/>
                    <ColumnDefinition x:Name="col4" Width="40"/>
                    <ColumnDefinition x:Name="col5" Width="40"/>
                    <ColumnDefinition x:Name="col6" Width="40"/>
                    <ColumnDefinition x:Name="col7" Width="40"/>
                </Grid.ColumnDefinitions>
                
                <Button Grid.Column="0"
                        IsEnabled="{x:Bind ViewModel.ActiveZoneViewModel.IsEnabledPrevious, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ActiveZoneViewModel.PreviousCommand, Mode=OneWay}"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <SymbolIcon Symbol="Previous" />
                </Button>
                <Button Grid.Column="1"
                        IsEnabled="{x:Bind ViewModel.ActiveZoneViewModel.IsEnabledPlay, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ActiveZoneViewModel.PlayCommand, Mode=OneWay}"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <SymbolIcon Symbol="Play" />
                </Button>
                <Button Grid.Column="2"
                        IsEnabled="{x:Bind ViewModel.ActiveZoneViewModel.IsEnabledPause, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ActiveZoneViewModel.PauseCommand, Mode=OneWay}"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <SymbolIcon Symbol="Pause" />
                </Button>
                <Button Grid.Column="3"
                        IsEnabled="{x:Bind ViewModel.ActiveZoneViewModel.IsEnabledStop, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ActiveZoneViewModel.StopCommand, Mode=OneWay}"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <SymbolIcon Symbol="Stop" />
                </Button>
                <Button Grid.Column="4"
                        IsEnabled="{x:Bind ViewModel.ActiveZoneViewModel.IsEnabledNext, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ActiveZoneViewModel.NextCommand, Mode=OneWay}"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <SymbolIcon Symbol="Next" />
                </Button>
                <Button Grid.Column="5"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Padding" Value="4"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Background" Value="#EE7B7B7B"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xE15D;" VerticalAlignment="Center" Style="{StaticResource AppFontIcon}"/>
                                <Slider x:Name="zoneVolumeSlider" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0,0,0" Minimum="0" Maximum="100"  Width="160" StepFrequency="1" SnapsTo="StepValues" Value="{x:Bind ViewModel.ActiveZoneViewModel.ZoneVolume, Mode=OneWay}" >
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="PointerCaptureLost">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ActiveZoneViewModel.SetZoneVolumeCommand, Mode=OneWay}"
                                                                    CommandParameter="{x:Bind zoneVolumeSlider,Mode=OneWay}" />
                                        </ic:EventTriggerBehavior>
                                        <ic:EventTriggerBehavior EventName="LostFocus">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ActiveZoneViewModel.SetZoneVolumeCommand, Mode=OneWay}"
                                                                    CommandParameter="{x:Bind zoneVolumeSlider,Mode=OneWay}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </Slider>
                                <CheckBox x:Name="zoneMuteCheckBox" x:Uid="checkboxMute" Style="{StaticResource appCheckBoxStyle}" Margin="16,0,0,0"  IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.ZoneMute, Mode=OneWay}" Content="MUTE" >
                                    <i:Interaction.Behaviors>
                                        <ic:EventTriggerBehavior EventName="Checked">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ActiveZoneViewModel.SetZoneMuteCommand, Mode=OneWay}"
                                                                    CommandParameter="{x:Bind zoneMuteCheckBox,Mode=OneWay}" />
                                        </ic:EventTriggerBehavior>
                                        <ic:EventTriggerBehavior EventName="Unchecked">
                                            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ActiveZoneViewModel.SetZoneMuteCommand, Mode=OneWay}"
                                                                    CommandParameter="{x:Bind zoneMuteCheckBox,Mode=OneWay}" />
                                        </ic:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </CheckBox>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="Volume" />
                </Button>
                <Button Grid.Column="6"
                        Style="{StaticResource TransactionButtonStyle}"
                        CornerRadius="16" Height="32" Width="32" Padding="8">
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Padding" Value="4"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Background" Value="#EE7B7B7B"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Uid="textBoxPlayModes" Text="PLAYMODES" Style="{StaticResource SettingsTextStyle}"/>
                                <RadioButton x:Uid="radioButtonNormal" Style="{StaticResource appRadioButtonStyle}" Content="NORMAL" Tag="NORMAL" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsNormal, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonShuffle" Style="{StaticResource appRadioButtonStyle}" Content="SHUFFLE" Tag="SHUFFLE" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsShuffle, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonRepeatOne" Style="{StaticResource appRadioButtonStyle}" Content="REPEAT_ONE" Tag="REPEAT_ONE" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsRepeatOne, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonRepeatAll" Style="{StaticResource appRadioButtonStyle}" Content="REPEAT_ALL" Tag="REPEAT_ALL" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsRepeatOne, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonRandom" Style="{StaticResource appRadioButtonStyle}" Content="RANDOM" Tag="RANDOM" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsRandom, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonDirektOne" Style="{StaticResource appRadioButtonStyle}" Content="DIREKT_1" Tag="DIREKT_1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsDirektOne, Mode=TwoWay}" />
                                <RadioButton x:Uid="radioButtonIntro" Style="{StaticResource appRadioButtonStyle}" Content="INTRO" Tag="INTRO" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" GroupName="PlayMode" IsChecked="{x:Bind ViewModel.ActiveZoneViewModel.IsIntro, Mode=TwoWay}" />
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="Repair" />
                </Button>
            </Grid>
        </RelativePanel>
        <!--<RelativePanel x:Name="busyPanel" Background="Transparent" Grid.Row="1" Grid.RowSpan="2" IsHitTestVisible="True" Visibility="{x:Bind ViewModel.BusyVisibility, Mode=OneWay}">
            <Image x:Name="imageRaumPlayer" Source="ms-appx:///Assets/Logo_white.png" Height="200" RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" Opacity="0.5"/>
            <TextBlock x:Name="textblockScanning" x:Uid="textblockScanning" Text="SCANNING" RelativePanel.Below="imageRaumPlayer" RelativePanel.AlignHorizontalCenterWithPanel="True" Style="{StaticResource GreetingsTextStyle}"/>
            <ProgressRing Width="50" Height="50" Margin="8" Foreground="{ThemeResource ContrastColorBrush}" IsActive="{x:Bind ViewModel.IsBusy, Mode=OneWay}" RelativePanel.Below="textblockScanning" RelativePanel.AlignHorizontalCenterWithPanel="True"/>
        </RelativePanel>-->
    </Grid>
</Page>
