<UserControl
    x:Class="raumPlayer.UserControls.PivotItemView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:vm="using:raumPlayer.ViewModels"
    xmlns:uc="using:raumPlayer.UserControls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    >

    <UserControl.Resources>
        <ItemsPanelTemplate x:Key="ListItemsPanelTemplate">
            <ItemsStackPanel />
        </ItemsPanelTemplate>

        <DataTemplate x:Key="GridDataTemplate" x:DataType="vm:ElementBase">
            <uc:ElementControl Element="{x:Bind Element, Mode=OneWay}"
                               ImageUri="{x:Bind AlbumArtUri, Mode=OneWay}"
                               Title="{x:Bind Title, Mode=OneWay}"
                               Line1="{x:Bind Line1, Mode=OneWay}"
                               Line2="{x:Bind Line2, Mode=OneWay}"
                               VisibleCount="{x:Bind VisibleCount, Mode=OneWay}"
                               VisibleCountVisibility="{x:Bind VisibleCountVisibility, Mode=OneWay}"
                               Width="{Binding ElementName=ItemWidthSlider, Path=Value }"
                               Margin="2">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="ItemTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.ItemTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="BrowseTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.BrowseTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="NewQueueTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.NewQueueTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="AddQueueTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.AddQueueTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="RemQueueTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.RemQueueTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="FavQueueTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.FavQueueTappedCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                    <ic:EventTriggerBehavior EventName="FavRemQueueTapped">
                        <ic:InvokeCommandAction Command="{Binding ElementName=Content, Path=DataContext.FavRemQueueCommand}" CommandParameter="{x:Bind Element}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
            </uc:ElementControl>
        </DataTemplate>
        
    </UserControl.Resources>

    <Grid x:Name="Content" >
        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                        <Setter Target="gridViewBrowse.ItemsPanel" Value="{StaticResource ListItemsPanelTemplate}"/>
                        <Setter Target="gridViewBrowse.ItemTemplate" Value="{StaticResource ListDataTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="{ThemeResource SystemRevealListMediumColor}" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MaxWidth="300" MinWidth="140"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="comboxboxPathElement" Grid.Column="0"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      ItemsSource="{x:Bind ViewModel.CacheElements, Mode=OneWay}"
                      IsEnabled="{x:Bind ViewModel.IsGoBackInCacheEnabled, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.LastCacheElement, Mode=TwoWay}"
                      >
                <ComboBox.ItemTemplate>
                    <DataTemplate x:DataType="vm:ElementBase">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="imageBrowseCurrentItem" Width="20" Height="20"
                               Source="{x:Bind AlbumArtUri, Mode=OneWay, Converter={StaticResource urlToBitmap}}"/>
                            <TextBlock Text="{x:Bind Title, Mode=OneWay}" Margin="8,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Slider x:Name="ItemWidthSlider"
                    Grid.Column="2"
                    Width="140"
                    Margin="16,0,16,0"
                    Value="140"
                    Minimum="120"
                    Maximum="240"
                    VerticalAlignment="Center"
                    />
            <ProgressRing x:Name="progressBar"
                          Grid.Column="3"
                          IsActive="{x:Bind ViewModel.IsScanning, Mode=OneWay}"
                          Visibility="Visible"
                          />
            <Button Grid.Column="4"
                    Command="{x:Bind ViewModel.RefreshElementsCommand}"
                    Style="{StaticResource TransactionButtonStyle}"
                    CornerRadius="16" Height="32" Width="32" Padding="8">
                <SymbolIcon Symbol="Refresh" />
            </Button>
            <Button Grid.Column="5" 
                    Style="{StaticResource TransactionButtonStyle}"
                    CornerRadius="16" Height="32" Width="32" Padding="8">
                <Button.Flyout>
                    <Flyout Placement="Left">
                        <AutoSuggestBox x:Name="autoSuggestBoxFilter"
                                        x:Uid="autoSuggestBoxFilter"
                                        Width="200"
                                        Text="{x:Bind ViewModel.FilterCriteria,Mode=TwoWay}"
                                        QueryIcon="Filter"
                                        PlaceholderText="FILTER" >
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="TextChanged">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.QuerySubmittedFilterCommand}" CommandParameter="{x:Bind autoSuggestBoxFilter}"/>
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                    </Flyout>
                </Button.Flyout>
                <SymbolIcon Symbol="Filter" />
            </Button>
            <Button Grid.Column="6" IsEnabled="{x:Bind ViewModel.IsSearchEnabled, Mode=OneWay}"
                    Style="{StaticResource TransactionButtonStyle}"
                    CornerRadius="16" Height="32" Width="32" Padding="8">
                <Button.Flyout>
                    <Flyout Placement="Left">
                        <AutoSuggestBox x:Name="autoSuggestBoxSearch" x:Uid="autoSuggestBoxSearch" Width="200" QueryIcon="Find" PlaceholderText="SEARCH">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="TextChanged">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.QuerySubmittedSearchCommand}" CommandParameter="{x:Bind autoSuggestBoxSearch}"/>
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                    </Flyout>
                </Button.Flyout>
                <SymbolIcon Symbol="Find" />
            </Button>
        </Grid>
        <!--<Image x:Name="imageBackground" Grid.Row="1" Source="{x:Bind ViewModel.LastPathElement.AlbumArtUri, Mode=OneWay, Converter={StaticResource urlToBitmap}}" Stretch="UniformToFill" Opacity="0.15" />-->
        <!--<uc:GroupedBrowserControl Grid.Row="1" GroupSource="{x:Bind ViewModel.GroupedElements, Mode=OneWay}" Visibility="{x:Bind ViewModel.GroupVisibility, Mode=OneWay}"
                                  FolderItemClicked="{x:Bind ViewModel.FolderItemClicked}"
                                  NewQueueClicked="{x:Bind ViewModel.OnNewQueueClicked}"
                                  AddQueueClicked="{x:Bind ViewModel.OnAddQueueClicked}"
                                  RemQueueClicked="{x:Bind ViewModel.OnRemQueueClicked}"
                                  FavQueueClicked="{x:Bind ViewModel.OnFavQueueClicked}"
                                  FavRemQueueClicked="{x:Bind ViewModel.OnFavRemQueueClicked}"/>-->
        <!--<GridView Grid.Row="1"
                  x:Name="gridViewBrowse"
                  ItemsSource="{x:Bind ViewModel.Elements, Mode=OneWay}"
                  ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                  IsItemClickEnabled="True" SelectionMode="None"
                  IsSwipeEnabled="True" AllowDrop="True"
                  ItemContainerStyle="{StaticResource appGridViewItemStyle}"
                  ItemTemplate="{StaticResource GridDataTemplate}"
                  >
            --><!--<GridView.ItemContainerStyle>
                <Style TargetType="GridViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                </Style>
            </GridView.ItemContainerStyle>-->
            <!--<GridView.ItemTemplate>
                <DataTemplate x:DataType="vm:ElementBase">
                    <uc:ElementControl Element="{x:Bind Element, Mode=OneWay}"
                                       ImageUri="{x:Bind AlbumArtUri, Mode=OneWay}"
                                       Title="{x:Bind Title, Mode=OneWay}"
                                       Line1="{x:Bind Line1, Mode=OneWay}"
                                       Line2="{x:Bind Line2, Mode=OneWay}"
                                       VisibleCount="{x:Bind VisibleCount, Mode=OneWay}"
                                       VisibleCountVisibility="{x:Bind VisibleCountVisibility, Mode=OneWay}"
                                       Margin="4,4,4,4"/>
                </DataTemplate>
            </GridView.ItemTemplate>--><!--
        </GridView>-->
        <GridView Grid.Row="1"
                  Name="gridViewBrowse"
                  IsItemClickEnabled="True"
                  SelectionMode="None"
                  ItemsSource="{x:Bind ViewModel.Elements, Mode=OneWay}"
                  ItemTemplate="{StaticResource GridDataTemplate}"
                  Margin="0,4,0,4">
        </GridView>

        <!--<controls:AdaptiveGridView Grid.Row="1"
                                   Name="gridViewBrowse"
                                   OneRowModeEnabled="False"
                                   DesiredWidth="{Binding Value,ElementName=ItemWidthSlider}"
                                   IsItemClickEnabled="True"
                                   SelectionMode="None"
                                   ItemsSource="{x:Bind ViewModel.Elements, Mode=OneWay}"
                                   ItemTemplate="{StaticResource GridDataTemplate}"
                                   ItemClickCommand="{x:Bind ViewModel.ItemClickedCommand}"
                                   Margin="0,4,0,4"/>-->

        
    </Grid>
</UserControl>
